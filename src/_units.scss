/// 
/// Strip units from number.
/// 
/// @link https://css-tricks.com/snippets/sass/strip-unit-function/
/// @link https://github.com/sass/sass/issues/533
/// @param {number} $number - Number with unit.
/// @return {number} $number - Number without unit.
///

@function strip-unit($number) {
    @return $number / ($number * 0 + 1);
}

/// 
/// Type evaluation.
/// 
/// Build evaluation from units to types.
/// 
/// @link http://hugogiraudel.com/2014/05/19/new-offsets-sass-mixin/
///

@function is-number($number) {
    @return type-of($number) == 'number';
}

@function is-keyword($number, $keywords: auto initial inherit 0) {
    @return index($keywords, $number) != null;
}

@function is-unit-type($number, $type) {
    @return is-number($number) and unit($number) == $type;
}

@function is-valid-unit($number) {
    @return (is-number($number) or (not is-number($number) and is-keyword($number)));
}

/// 
/// Type and unit check shorthand functions.
/// 
/// @param {string} $number - Candidate unit.
/// @return {bool} - Unit is $type, true false.
///

@function is-list($list) {
    @return type-of($list) == 'list';
}

@function is-decimal($number) {
    @return is-number($number) and unitless($number);
}

@function is-percent($number) {
    @return is-number($number) and is-unit-type($number, '%');
}

@function is-px($number) {
    @return is-number($number) and is-unit-type($number, 'px');
}

@function is-vh($number) {
    @return is-number($number) and is-unit-type($number, 'vh');
}

@function is-vw($number) {
    @return is-number($number) and is-unit-type($number, 'vw');
}

@function is-em($number) {
    @return is-number($number) and is-unit-type($number, 'em');
}

@function is-rem($number) {
    @return is-number($number) and is-unit-type($number, 'rem');
}

/// 
/// Flexible Square Boxes
/// 
/// Generate a box whose height is equal to the given ratio of the width.
/// Width can be of any size. Ratio should be between 0 and foo.
/// 
/// Any unit, fixed or percentage, is acceptable.
/// 
/// @param {map} $size - Horizontal width and height ratio.
///

@mixin square-flex($size: 100% 1) {
    $width: nth($size, 1);
    $ratio: nth($size, 2);

    $ratio: $width * $ratio;

    $ratio: if(unitless($ratio), rem($ratio), $ratio);
    $width: if(unitless($width), rem($width), $width);

    height: 0;
    padding-bottom: $ratio;
    width: $width;
}

/// 
/// Decimal Margin and Padding
/// 
/// These two don't do too much except make life easier: Set margin or padding as
/// a multiplier of the base margin and padding. The side can be appended through
/// an optional operator. If you do set a side, every margin or padding except
/// the first passed will be silently discarded.
/// 
/// @param {string} $attribute - Attribute to set sizes for.
/// @param {list} $values - Values, either singlar or plural.
/// @param {list} $sides - Sides (top, left, etc.).
///

@mixin box-size($attribute, $values, $sides: null) {
    @if $sides {
        @if length($values) > 1 {
            // Discard all values but the first if explicit sides are provided.
            $values: nth($values, 1);
        }

        @each $side in $sides {
            @include rem(#{$attribute + '-' + $side}, $values);
        }
    } @else {
        @include rem(#{$attribute}, $values);
    }
}

@mixin margin($margin, $side: null) {
    @include box-size(margin, $margin, $side);
}

@mixin padding($padding, $side: null) {
    @include box-size(padding, $padding, $side);
}

@mixin width($width, $sides: null) {
    @include box-size(width, $width);
}

@mixin height($height, $sides: null) {
    @include box-size(height, $height);
}

/// 
/// Quickly Set Width and Height
/// 
/// @param {list} $sizes - Width and height sizes.
///

@mixin size($sizes...) {
    $sizes: if(length($sizes) == 1, nth($sizes, 1), $sizes);

    $width: nth($sizes, 1);
    $height: nth($sizes, 2);

    @if is-decimal($width) {
        @include width($width);
    } @else {
        width: $width;
    }

    @if is-decimal($height) {
        @include height($height);
    } @else {
        height: $height;
    }
}

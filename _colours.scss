/**
 * Manage Colour Variables
 * -----------------------------------------------------------------------------
 * Your mileage may vary, but these defaults work fine for me. 
 *
 * @category   Stylesheet
 * @package    Scss Helpers
 * @author     Mark Grealish <mark@bhalash.com>
 * @copyright  Copyright (c) 2015, Mark Grealish
 * @license    http://opensource.org/licenses/MIT The MIT License (MIT)
 * @version    1.0
 * @link       https://github.com/bhalash/scss-helpers
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Default Size Colors
 * -----------------------------------------------------------------------------
 * Default grey (I use gray because "grey" highlights annoyingly) came from a 
 * simple rounded scale. Formula:
 * 
 * 255 / 7 = 36.4 = 36
 * 255 - (36 * {1-7}) = 219, 183, etc.
 * 
 * If you keep the structure, you can merge in your own colors as follows:
 * 
 * $my-theme-colors: (..);
 * $default-colors: map-merge($default-colors, $my-theme-colors);

 * @link http://erskinedesign.com/blog/friendlier-color-names-sass-maps/
 */

$sh-color-palette: (
    black: (
        x-dark: #000000,
        dark: #121212,
        mid-dark: #242424,
        base: #373737,
        mid-light: #494949,
        light: #5b5b5b,
        x-light: #6d6d6d
    ),
    white: (
        x-dark: #939393,
        dark: #a5a5a5,
        mid-dark: #b7b7b7,
        base: #c8c8c8,
        mid-light: #dcdcdc,
        light: #ededed,
        x-light: #ffffff
    ),
) !default;

/**
 * Add Color Palettes
 * -----------------------------------------------------------------------------
 * @param   map         $map                Map of palettes to add.
 * @return  map         $sh-color-palette   New palette.
 */

@function sh-add-palettes($map) {
    $sh-color-palette: map-merge($sh-color-palette, $map) !global;
    @return $sh-color-palette;
}

/**
 * Fetch from Color Palette
 * -----------------------------------------------------------------------------
 * In short, the post advocates a mapped palette of colors and tones using a 
 * set schema, and then using this function to return the colors. 
 *
 *      $_color-base-gray: rgb(229,231,234);
 * 
 *      $palettes: (
 *          purple: (
 *              base: rgb(42,40,80),
 *              light: rgb(51,46,140),
 *              dark: rgb(40,38,65)
 *             ),
 *          gray: (
 *              base: $_color-base-gray,
 *              light: lighten($_color-base-gray, 10%),
 *              dark: darken($_color-base-gray, 10%)
 *          )
 *      );
 * 
 * @param   string      $color          Color to be used from map.
 * @param   string      $tone           Default tone to be used.
 * @param   map         $palette        Palette of colors.
 * @return  string                      Color chen from map.
 *
 * @link http://erskinedesign.com/blog/friendlier-color-names-sass-maps/
 */

@function palette($color, $tone: 'base') {
    @return map-get(map-get($sh-color-palette, $color), $tone);
}
